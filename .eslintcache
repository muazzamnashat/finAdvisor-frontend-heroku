[{"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/index.js":"1","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/App.js":"2","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reportWebVitals.js":"3","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/rootReducer.js":"4","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Login.js":"5","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/fetchCategories.js":"6","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/SignUp.js":"7","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Dashboard.js":"8","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/transactionsSummary.js":"9","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/fetchTransactions.js":"10","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/userActions.js":"11","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/loginReducer.js":"12","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/transactionReducer.js":"13","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/categoryReducer.js":"14","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/summaryReducer.js":"15","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/userReducer.js":"16","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Profile.js":"17","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Transactions.js":"18","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/ListItems.js":"19","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/RecentTransactions.js":"20","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Chart.js":"21","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Summary.js":"22","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/ProfileDetails.js":"23","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Profile.js":"24","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/TransactionTableHead.js":"25","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Title.js":"26","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Transaction.js":"27","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Toolbar.js":"28","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/DeleteConfirmation.js":"29","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/TransactionForm.js":"30"},{"size":1154,"mtime":1611948235534,"results":"31","hashOfConfig":"32"},{"size":2088,"mtime":1611958528767,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1610128540997,"results":"34","hashOfConfig":"32"},{"size":491,"mtime":1611382088559,"results":"35","hashOfConfig":"32"},{"size":4005,"mtime":1610988382463,"results":"36","hashOfConfig":"32"},{"size":521,"mtime":1611952731825,"results":"37","hashOfConfig":"32"},{"size":4962,"mtime":1611542564266,"results":"38","hashOfConfig":"32"},{"size":7494,"mtime":1611939540692,"results":"39","hashOfConfig":"32"},{"size":1587,"mtime":1611390081063,"results":"40","hashOfConfig":"32"},{"size":2269,"mtime":1611952646886,"results":"41","hashOfConfig":"32"},{"size":2914,"mtime":1611952629477,"results":"42","hashOfConfig":"32"},{"size":165,"mtime":1611946086354,"results":"43","hashOfConfig":"32"},{"size":862,"mtime":1611949743676,"results":"44","hashOfConfig":"32"},{"size":278,"mtime":1611946096184,"results":"45","hashOfConfig":"32"},{"size":401,"mtime":1611946079307,"results":"46","hashOfConfig":"32"},{"size":334,"mtime":1611946053502,"results":"47","hashOfConfig":"32"},{"size":704,"mtime":1611833674548,"results":"48","hashOfConfig":"32"},{"size":2266,"mtime":1611910987572,"results":"49","hashOfConfig":"32"},{"size":2516,"mtime":1611903201534,"results":"50","hashOfConfig":"32"},{"size":2114,"mtime":1611915992081,"results":"51","hashOfConfig":"32"},{"size":2731,"mtime":1611912579412,"results":"52","hashOfConfig":"32"},{"size":2274,"mtime":1611480127321,"results":"53","hashOfConfig":"32"},{"size":3981,"mtime":1611480816884,"results":"54","hashOfConfig":"32"},{"size":1332,"mtime":1611480514548,"results":"55","hashOfConfig":"32"},{"size":541,"mtime":1611342446813,"results":"56","hashOfConfig":"32"},{"size":352,"mtime":1611903595584,"results":"57","hashOfConfig":"32"},{"size":7785,"mtime":1611912456947,"results":"58","hashOfConfig":"32"},{"size":2495,"mtime":1611904255465,"results":"59","hashOfConfig":"32"},{"size":829,"mtime":1611911828439,"results":"60","hashOfConfig":"32"},{"size":3672,"mtime":1611912834452,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"iu8yd6",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/index.js",[],["132","133"],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/App.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reportWebVitals.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/rootReducer.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Login.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/fetchCategories.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/SignUp.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Dashboard.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/transactionsSummary.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/fetchTransactions.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/actions/userActions.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/loginReducer.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/transactionReducer.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/categoryReducer.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/summaryReducer.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/reducers/userReducer.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Profile.js",["134"],"import React from \"react\";\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\nimport Profile from \"../components/Profile\";\nimport ProfileDetails from \"../components/ProfileDetails\";\nimport { connect } from \"react-redux\";\n\nconst Account = (props) => {\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container spacing={3}>\n        <Grid item lg={4} md={6} xs={12}>\n          <Profile user={props.user} />\n        </Grid>\n        <Grid item lg={8} md={6} xs={12}>\n          <ProfileDetails user={props.user} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\nconst mapStateToProps = (state) => {\n  return { user: state.user };\n};\nexport default connect(mapStateToProps)(Account);\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/containers/Transactions.js",["135","136"],"import React, { useState } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { connect } from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport Title from \"../components/Title\";\nimport Toolbar from \"../components/Toolbar\";\nimport Transaction from \"../components/Transaction\";\nimport { TransactionTableHead } from \"../components/TransactionTableHead\";\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n}));\n\nfunction Transactions(props) {\n  const [keyword, setKeyword] = useState(\"\");\n  const sortedData = props.transactions.sort(\n    (a, b) => new Date(b.date) - new Date(a.date)\n  );\n\n  const rows = sortedData.map((transaction) => {\n    return {\n      id: transaction.id,\n      date: transaction.date,\n      description: transaction.description,\n      category: transaction.category,\n      category_id: transaction.category_id,\n      amount: transaction.amount,\n      user_id: transaction.user_id,\n      deposit: transaction.deposit,\n    };\n  });\n\n  const classes = useStyles();\n\n  const populateTable = () => {\n    return rows.map((row) => {\n      if (keyword === \"\")\n        return <Transaction key={uuid()} row={row} showBtn={true} />;\n      else if (row.description.includes(keyword))\n        return <Transaction key={uuid()} row={row} showBtn={true} />;\n      else return;\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Toolbar setKeyword={setKeyword} />\n        <Paper className={classes.paper}>\n          <Title>Here are all the transactions</Title>\n          <Table size=\"small\">\n            <TransactionTableHead />\n            <TableBody>{populateTable()}</TableBody>\n          </Table>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.transactions,\n  };\n};\n\nexport default connect(mapStateToProps)(Transactions);\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/ListItems.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/RecentTransactions.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Chart.js",["137"],"import React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from \"recharts\";\n// import * as Recharts from 'recharts';\nimport clsx from \"clsx\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Title from \"./Title\";\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Chart({ transactions }) {\n  // debugger;\n  const today = new Date();\n  const month = today.getMonth() + 1;\n  let data = [];\n\n  // filter only current month data\n\n  for (let i = 0; i < transactions.length; i++) {\n    const transaction = transactions[i];\n    const parseMonth = parseInt(transaction.date.split(\"T0\")[0].split(\"-\")[1]);\n    const parseDay = parseInt(transaction.date.split(\"T0\")[0].split(\"-\")[2]);\n    if (parseMonth == month)\n      data.push({ time: parseDay, amount: transaction.amount });\n  }\n\n  const theme = useTheme();\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <React.Fragment>\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Title>This month's spending by day!</Title>\n          <ResponsiveContainer>\n            <LineChart\n              data={data.sort((a, b) => a.time - b.time)}\n              margin={{\n                top: 16,\n                right: 16,\n                bottom: 18,\n                left: 24,\n              }}\n            >\n              <XAxis\n                interval={2}\n                dataKey=\"time\"\n                stroke={theme.palette.text.secondary}\n              >\n                <Label angle={360} position=\"bottom\">\n                  Day\n                </Label>\n              </XAxis>\n              <YAxis stroke={theme.palette.text.secondary}>\n                <Label\n                  angle={270}\n                  position=\"left\"\n                  style={{\n                    textAnchor: \"middle\",\n                    fill: theme.palette.text.primary,\n                  }}\n                >\n                  Spend ($)\n                </Label>\n              </YAxis>\n              <Line\n                type=\"monotone\"\n                dataKey=\"amount\"\n                stroke={theme.palette.primary.main}\n                dot={false}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Summary.js",["138","139"],"import React from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Title from \"./Title\";\nimport clsx from \"clsx\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  depositContext: {\n    flex: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction Summary(props) {\n  // debugger;\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const today = new Date();\n  const currentMonth = today.toLocaleString(\"default\", {\n    month: \"long\",\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}>\n          <Title>Total spending this month</Title>\n          <Typography component=\"p\" variant=\"h6\">\n            $\n            {props.summary.total_spend\n              ? props.summary.total_spend[currentMonth]\n              : null}\n          </Typography>\n          {/* <Typography color=\"textSecondary\" className={classes.depositContext}>\n            as of <Moment format=\"D MMM YYYY\">{today}</Moment>\n          </Typography> */}\n\n          <Title>Total income this month</Title>\n          <Typography component=\"p\" variant=\"h6\">\n            $\n            {props.summary.total_income\n              ? props.summary.total_income[currentMonth]\n              : null}\n          </Typography>\n          <Typography color=\"textSecondary\" className={classes.depositContext}>\n            as of <Moment format=\"D MMM YYYY\">{today}</Moment>\n          </Typography>\n\n          {/* <div>\n            <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n              View balance\n            </Link>\n          </div> */}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { summary: state.summary };\n};\nexport default connect(mapStateToProps)(Summary);\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/ProfileDetails.js",["140","141","142"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { updateUser } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\n\n// const useStyles = makeStyles(() => ({\n//   root: {},\n// }));\n\nclass ProfileDetails extends React.Component {\n  //   const classes = useStyles();\n  state = {\n    first_name: this.props.user.first_name,\n    last_name: this.props.user.last_name,\n    email: this.props.user.email,\n    income: this.props.user.income,\n    age: this.props.user.age,\n    gender: this.props.user.gender,\n  };\n\n  handleChange(event) {\n    this.setState((prevState) => {\n      return { ...prevState, [event.target.name]: event.target.value };\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    // debugger;\n    this.props.updateUser(this.state);\n  }\n  render() {\n    return (\n      <form onSubmit={(event) => this.handleSubmit(event)}>\n        <Card>\n          <CardHeader\n            subheader=\"The information can be edited\"\n            title=\"Profile\"\n          />\n          <Divider />\n          <CardContent>\n            <Grid container spacing={3}>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  helperText=\"Please specify the first name\"\n                  label=\"First name\"\n                  name=\"first_name\"\n                  onChange={(event) => this.handleChange(event)}\n                  required\n                  value={this.state.first_name}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Last name\"\n                  name=\"last_name\"\n                  onChange={(event) => this.handleChange(event)}\n                  value={this.state.last_name}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Email Address\"\n                  name=\"email\"\n                  onChange={(event) => this.handleChange(event)}\n                  value={this.state.email}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Income\"\n                  name=\"income\"\n                  onChange={(event) => this.handleChange(event)}\n                  type=\"number\"\n                  value={this.state.income}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Age\"\n                  name=\"age\"\n                  onChange={(event) => this.handleChange(event)}\n                  type=\"number\"\n                  value={this.state.age}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Gender\"\n                  name=\"gender\"\n                  onChange={(event) => this.handleChange(event)}\n                  value={this.state.gender}\n                  variant=\"outlined\"\n                ></TextField>\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n              Save details\n            </Button>\n          </Box>\n        </Card>\n      </form>\n    );\n  }\n}\n\n// ProfileDetails.propTypes = {\n//   className: PropTypes.string,\n// };\n\nexport default connect(null, { updateUser })(ProfileDetails);\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Profile.js",["143","144"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Moment from \"react-moment\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100,\n  },\n}));\n\nconst Profile = ({ user }) => {\n  //   debugger;\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\n          <Avatar src={user.avatar} />\n          <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\n            {`${user.first_name} ${user.last_name}`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body1\">\n            {`${user.age} ${user.gender}`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body1\">\n            <Moment format=\"D MMM YYYY hh:mm A\">{new Date()}</Moment>\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button color=\"primary\" fullWidth variant=\"text\">\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Profile;\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/TransactionTableHead.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Title.js",["145"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\n// Title.propTypes = {\n//   children: PropTypes.node,\n// };\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Transaction.js",["146","147"],"import React, { useState } from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { connect } from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport {\n  updateTransaction,\n  deleteTransaction,\n} from \"../actions/fetchTransactions\";\nimport DeleteConfirmation from \"./DeleteConfirmation\";\n\nclass Transaction extends React.Component {\n  state = {\n    openDialog: false,\n    data: {\n      id: this.props.row.id,\n      date: this.props.row.date,\n      description: this.props.row.description,\n      category_id: this.props.row.category_id,\n      amount: this.props.row.amount,\n      user_id: this.props.row.user_id,\n      category: this.props.row.category,\n      deposit: this.props.row.deposit,\n    },\n  };\n\n  // hide the buttons when displayed on recent transactions table\n  showButton() {\n    // debugger;\n    if (this.props.showBtn) {\n      return (\n        <TableCell key={uuid()}>\n          {this.state.currentlyEditing ? (\n            // Tooltips display informative text when users hover over, focus on, or tap an element.\n            <Tooltip title=\"Click when done\">\n              <IconButton name=\"done\" onClick={this.handleUpdate.bind(this)}>\n                <DoneIcon color=\"primary\" />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <>\n              {/* Tooltips display informative text when users hover over, focus on, or tap an element. */}\n              <Tooltip title=\"Edit\">\n                <IconButton name=\"edit\" onClick={this.handleEdit}>\n                  <EditIcon color=\"primary\" />\n                </IconButton>\n              </Tooltip>\n\n              {/* Tooltips display informative text when users hover over, focus on, or tap an element. */}\n              <Tooltip title=\"Delete\">\n                <IconButton onClick={this.handleDelete}>\n                  <DeleteIcon color=\"primary\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          )}\n        </TableCell>\n      );\n    }\n  }\n\n  // show type based on boolean value\n  showType = () => {\n    if (this.state.data.deposit) {\n      return <p id=\"type\">Deposit</p>;\n    } else {\n      return <p id=\"type\">Withdraw</p>;\n    }\n  };\n\n  handleChange = (event) => {\n    if (event.target.name === \"category\") {\n      const categoryName = this.props.categories.find(\n        (category) => category.id === event.target.value\n      ).name;\n\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          data: {\n            ...prevState.data,\n            category_id: event.target.value,\n            category: { name: categoryName },\n          },\n        };\n      });\n      return;\n    }\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        data: {\n          ...prevState.data,\n          [event.target.name]: event.target.value,\n        },\n      };\n    });\n  };\n\n  // when clicked show the edit fields\n  handleEdit = () => {\n    this.setState({ ...this.state, currentlyEditing: true });\n  };\n\n  handleUpdate = () => {\n    const categoryName = this.props.categories.find(\n      (category) => category.id === this.state.data.category_id\n    ).name;\n    const updatedData = {\n      ...this.state.data,\n      category: { name: categoryName },\n    };\n    this.props.updateTransaction(updatedData);\n  };\n\n  //when clicked delete button, show confirmation component\n\n  handleDelete = () => {\n    this.setState({ ...this.state, openDialog: true });\n  };\n\n  // receive true/false from child component and decide delete action\n  confirmDelete = (term) => {\n    if (term) this.props.deleteTransaction(this.state.data.id);\n    this.setState({ ...this.state, openDialog: false });\n  };\n\n  render() {\n    {\n      var date = this.state.data.date.split(\"T0\")[0].split(\"-\");\n      var formattedDate = `${date[1]}-${date[2]}-${date[0]}`;\n    }\n    return (\n      <>\n        {/* Delete confirmation */}\n        <TableRow hover={true}>\n          {this.state.openDialog ? (\n            <TableCell>\n              <DeleteConfirmation\n                confirmDelete={this.confirmDelete.bind(this)}\n              />\n            </TableCell>\n          ) : null}\n\n          {/* this is date section */}\n          <TableCell>\n            {this.state.currentlyEditing ? (\n              <TextField\n                name=\"date\"\n                label=\"Date\"\n                type=\"date\"\n                defaultValue={date.join(\"-\")}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={this.handleChange}\n              />\n            ) : (\n              <p id=\"date\">{formattedDate}</p>\n            )}\n          </TableCell>\n\n          {/* description */}\n\n          <TableCell>\n            {this.state.currentlyEditing ? (\n              <TextareaAutosize\n                name=\"description\"\n                defaultValue={this.state.data.description}\n                onChange={this.handleChange}\n              />\n            ) : (\n              <p id=\"description\">{this.state.data.description}</p>\n            )}\n          </TableCell>\n\n          {/* category */}\n\n          <TableCell>\n            {this.state.currentlyEditing ? (\n              <TextField\n                select\n                name=\"category\"\n                value={this.state.data.category_id}\n                onChange={this.handleChange}\n                helperText=\"Please select a category\"\n              >\n                {this.props.categories.map((category) => {\n                  return (\n                    <MenuItem\n                      key={uuid()}\n                      value={category.id}\n                      name={category.name}\n                    >\n                      {category.name}\n                    </MenuItem>\n                  );\n                })}\n              </TextField>\n            ) : (\n              <p id=\"category\">{this.state.data.category.name}</p>\n            )}\n          </TableCell>\n\n          {/* Type */}\n\n          <TableCell>\n            {this.state.currentlyEditing ? (\n              <TextField\n                select\n                name=\"deposit\"\n                value={this.state.data.deposit}\n                onChange={this.handleChange}\n                helperText=\"Please select a type\"\n              >\n                {[\n                  <MenuItem key={uuid()} value={true}>\n                    Deposit\n                  </MenuItem>,\n\n                  <MenuItem key={uuid()} value={false}>\n                    Withdraw\n                  </MenuItem>,\n                ]}\n              </TextField>\n            ) : (\n              this.showType()\n            )}\n          </TableCell>\n\n          {/* amount */}\n          <TableCell>\n            {this.state.currentlyEditing ? (\n              <TextField\n                type=\"number\"\n                name=\"amount\"\n                onChange={this.handleChange}\n                defaultValue={this.state.data.amount}\n              />\n            ) : (\n              <p id=\"amount\">{this.state.data.amount}</p>\n            )}\n          </TableCell>\n          {this.showButton()}\n        </TableRow>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categories,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateTransaction,\n  deleteTransaction,\n})(Transaction);\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/Toolbar.js",["148"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"react-feather\";\nimport TransactionForm from \"./TransactionForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Toolbar = (props) => {\n  const [showForm, setShowForm] = useState(false);\n\n  const classes = useStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const handleChange = (event) => {\n    props.setKeyword(event.target.value);\n  };\n\n  return (\n    <div className={clsx(classes.root)}>\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setShowForm(!showForm)}\n        >\n          Add transaction\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SvgIcon fontSize=\"small\" color=\"action\">\n                          <SearchIcon />\n                        </SvgIcon>\n                      </InputAdornment>\n                    ),\n                  }}\n                  placeholder=\"Search transaction\"\n                  variant=\"outlined\"\n                  name=\"search\"\n                  onChange={handleChange}\n                />\n              </form>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n\n      {/* show the add transaction form only if the add transaction button is clicked */}\n      {showForm ? (\n        <Box mt={3}>\n          <Card>\n            <Box maxWidth={1500} boxShadow={3} m={1} p={1}>\n              <TransactionForm setShowForm={setShowForm} />\n            </Box>\n          </Card>\n        </Box>\n      ) : null}\n    </div>\n  );\n};\n\n// Toolbar.propTypes = {\n//   className: PropTypes.string,\n// };\n\nconst mapStateToProps = (state) => {\n  return { transactions: state.transactions };\n};\n\nexport default connect(mapStateToProps)(Toolbar);\n","/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/DeleteConfirmation.js",[],"/Users/nashat/Flatiron/Projects/FinAdvisor/finad-client/src/components/TransactionForm.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":2,"column":27,"nodeType":"155","messageId":"156","endLine":2,"endColumn":37},{"ruleId":"153","severity":1,"message":"157","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":12},{"ruleId":"158","severity":1,"message":"159","line":54,"column":12,"nodeType":"160","messageId":"161","endLine":54,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":45,"column":20,"nodeType":"164","messageId":"165","endLine":45,"endColumn":22},{"ruleId":"153","severity":1,"message":"157","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":12},{"ruleId":"153","severity":1,"message":"166","line":12,"column":10,"nodeType":"155","messageId":"156","endLine":12,"endColumn":24},{"ruleId":"153","severity":1,"message":"167","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":12},{"ruleId":"153","severity":1,"message":"168","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":13,"column":3,"nodeType":"155","messageId":"156","endLine":13,"endColumn":13},{"ruleId":"153","severity":1,"message":"167","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":12},{"ruleId":"153","severity":1,"message":"169","line":27,"column":9,"nodeType":"155","messageId":"156","endLine":27,"endColumn":16},{"ruleId":"153","severity":1,"message":"168","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"170","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":138,"column":5,"nodeType":"173","messageId":"174","endLine":141,"endColumn":6},{"ruleId":"153","severity":1,"message":"168","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'preventDefault' is defined but never used.","'clsx' is defined but never used.","'PropTypes' is defined but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]